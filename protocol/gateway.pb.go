// Code generated by protoc-gen-go.
// source: gateway.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ReqMsgServer struct {
	Cmd    uint32 `protobuf:"varint,1,opt,name=cmd" json:"cmd,omitempty"`
	CmdStr string `protobuf:"bytes,2,opt,name=cmdStr" json:"cmdStr,omitempty"`
}

func (m *ReqMsgServer) Reset()                    { *m = ReqMsgServer{} }
func (m *ReqMsgServer) String() string            { return proto.CompactTextString(m) }
func (*ReqMsgServer) ProtoMessage()               {}
func (*ReqMsgServer) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type ResSelectMsgServerForClient struct {
	Cmd     uint32 `protobuf:"varint,1,opt,name=cmd" json:"cmd,omitempty"`
	CmdStr  string `protobuf:"bytes,2,opt,name=cmdStr" json:"cmdStr,omitempty"`
	ErrCode uint32 `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	ErrStr  string `protobuf:"bytes,4,opt,name=errStr" json:"errStr,omitempty"`
	Addr    string `protobuf:"bytes,5,opt,name=addr" json:"addr,omitempty"`
}

func (m *ResSelectMsgServerForClient) Reset()                    { *m = ResSelectMsgServerForClient{} }
func (m *ResSelectMsgServerForClient) String() string            { return proto.CompactTextString(m) }
func (*ResSelectMsgServerForClient) ProtoMessage()               {}
func (*ResSelectMsgServerForClient) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func init() {
	proto.RegisterType((*ReqMsgServer)(nil), "protocol.ReqMsgServer")
	proto.RegisterType((*ResSelectMsgServerForClient)(nil), "protocol.ResSelectMsgServerForClient")
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4f, 0x2c, 0x49,
	0x2d, 0x4f, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39,
	0x4a, 0x16, 0x5c, 0x3c, 0x41, 0xa9, 0x85, 0xbe, 0xc5, 0xe9, 0xc1, 0xa9, 0x45, 0x65, 0xa9, 0x45,
	0x42, 0x02, 0x5c, 0xcc, 0xc9, 0xb9, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xbc, 0x41, 0x20, 0xa6,
	0x90, 0x18, 0x17, 0x5b, 0x72, 0x6e, 0x4a, 0x70, 0x49, 0x91, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67,
	0x10, 0x94, 0xa7, 0xd4, 0xcb, 0xc8, 0x25, 0x1d, 0x94, 0x5a, 0x1c, 0x9c, 0x9a, 0x93, 0x9a, 0x5c,
	0x02, 0x37, 0xc0, 0x2d, 0xbf, 0xc8, 0x39, 0x27, 0x33, 0x35, 0xaf, 0x84, 0x78, 0x93, 0x84, 0x24,
	0xb8, 0xd8, 0x53, 0x8b, 0x8a, 0x9c, 0xf3, 0x53, 0x52, 0x25, 0x98, 0xc1, 0xaa, 0x61, 0x5c, 0x90,
	0x8e, 0xd4, 0xa2, 0x22, 0x90, 0x0e, 0x16, 0x88, 0x0e, 0x08, 0x4f, 0x48, 0x88, 0x8b, 0x25, 0x31,
	0x25, 0xa5, 0x48, 0x82, 0x15, 0x2c, 0x0a, 0x66, 0x27, 0xb1, 0x81, 0xfd, 0x64, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0xeb, 0x50, 0x5b, 0xc7, 0xeb, 0x00, 0x00, 0x00,
}
